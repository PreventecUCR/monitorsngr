<?php

/**
 * Implements hook_node_insert().
 */
function auto_fill_id_node_insert($node)
{
    if($node->type == "compromiso_de_gestion") {
        action_id($node);
    }
}

/**
 * Implements hook_theme_registry_alter().
 */
function auto_fill_id_theme_registry_alter(&$theme_registry) {
  $module_path = drupal_get_path('module', 'auto_fill_id');
  $template_file_objects = drupal_find_theme_templates($theme_registry, '.tpl.php', $module_path);
  foreach ($template_file_objects as $key => $template_file) {
    if(!isset($theme_registry[$key]['theme path']) || !preg_match('#/themes/#', $theme_registry[$key]['theme path'])) {
      $theme_registry[$key]['theme path'] = $module_path;
      $theme_registry[$key] = array_merge($theme_registry[$key], $template_file);
      $theme_registry[$key]['type'] = 'module';
    }
  }
}

/**
 * Implements hook_preprocess_page().
 */
function auto_fill_id_preprocess_page(&$vars, $hook) {

}

/**
 * Implements hook_field_attach_preprocess_alter().
 */
function auto_fill_id_field_attach_preprocess_alter(&$variables, $context) {
}

/**
 * Implements hook_node_presave().
 */
function auto_fill_id_node_presave($node) {
  if($node->type == "compromiso_de_gestion") {
    compromiso_id($node);
  }
}

/**
 * Implements hook_node_update().
 */
function auto_fill_id_node_update($node)
{
    if($node->type == "compromiso_de_gestion") {
      action_id($node);
    }
}

/**
 * Implements hook_form_alter().
 */
function auto_fill_id_form_alter(&$form, &$form_state, $form_id) {

}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function auto_fill_id_form_meta_node_form_alter(&$form, &$form_state, $form_id) {

  //css
  $form['#attached'] = array(
    'css' => array('sites/all/modules/custom/auto_fill_id/css/meta_form.css'),
  );

  $form['title']['#disabled'] = TRUE;

  $form['field_producto'][LANGUAGE_NONE]['actions']['ief_add']['#value'] = 'Añadir producto';

  if(is_add_form($form_state)) {
    $form['title']['#default_value'] = '(M1)';
  }

  if(isset($form['field_producto'][LANGUAGE_NONE]['form'])) {
    $form['field_producto'][LANGUAGE_NONE]['form']['#title'] = 'Nuevo producto';
    $form['field_producto'][LANGUAGE_NONE]['form']['actions']['ief_add_save']['#value'] = 'Crear Producto';
    $form['field_producto'][LANGUAGE_NONE]['form']['field_cod_producto_meta'][LANGUAGE_NONE][0]['value']['#default_value'] = 'E#A#L#M1P1';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function auto_fill_id_form_compromiso_de_gestion_node_form_alter(&$form, &$form_state, $form_id) {

  //Add css
  $form['#attached'] = array(
    'css' => array('sites/all/modules/custom/auto_fill_id/css/compromiso_form.css'),
  );

  //Compromiso de Gestión title disabled
  $form['title']['#disabled'] = TRUE;
  $form['field_porcentaje_de_avance_compr']['#access'] = 0;
  $form['field_porcentaje_de_avance_compr']['#disabled'] = TRUE;

  //Items de compromiso
  $form['field_item_compromiso'][LANGUAGE_NONE]['#title'] = 'Items de Compromiso';
  $form['field_item_compromiso'][LANGUAGE_NONE]['add_more']['#value'] = 'Añadir Nuevo Item de Compromiso';

  $items_array = array_filter($form['field_item_compromiso'][LANGUAGE_NONE], function ($k) { return is_numeric($k); },  ARRAY_FILTER_USE_KEY);
  $items_size = sizeof($items_array);
  //$groups = array();

  foreach($items_array as $item_id => $item) {
      $item['field_id_item']['#disabled'] = TRUE;
      $item_title = 'Item #' . ($item_id + 1);
      $group1 = $item_id > 0 ? clone_group($item['#fieldgroups']['group_muy_loco']) : $item['#fieldgroups']['group_muy_loco'];
      $group2 = $item_id > 0 ? clone_group($item['#fieldgroups']['group_items_v_tabs']) : $item['#fieldgroups']['group_items_v_tabs'];

      $item['field_id_item'][LANGUAGE_NONE][0]['value']['#default_value'] = $item_title;
      $group1->label = $item_title;
      $group2->label = $item_title;

      $item['#fieldgroups']['group_muy_loco'] = $group1;
      $item['#groups']['group_muy_loco'] = $group1;
      $item['#fieldgroups']['group_items_v_tabs'] = $group2;
      $item['#groups']['group_items_v_tabs'] = $group2;

      $ajax_eal = array(

        'callback' => 'eal_ajax_callback',
        'method' => 'replace',
      );

      $item['field_codigo_eje'][LANGUAGE_NONE]['#ajax'] = $ajax_eal;
      $item['field_codigo_ambito'][LANGUAGE_NONE]['#ajax'] = $ajax_eal;
      $item['field_codigo_lineamiento'][LANGUAGE_NONE]['#ajax'] = $ajax_eal;

      //Acciones estratégicas
      $item['field_accion_collect'][LANGUAGE_NONE]['#title'] = 'Acciones Estratégicas';
      $item['field_accion_collect'][LANGUAGE_NONE]['add_more']['#value'] = 'Agregar Acción Estratégica';

      foreach($item['field_accion_collect'][LANGUAGE_NONE] as $accion_id => $accion ) {
        if(is_numeric($accion_id)) {

          //Acción estrategica
          $accion['field_codigo_accion_estrategica']['#disabled'] = TRUE;
          $accion['field_codigo_accion_estrategica'][LANGUAGE_NONE][0]['value']['#prefix'] = '<div id="item_' . $item_id . '_codigo_accion_'. $accion_id .'">';
          //$accion['field_codigo_accion_estrategica'][LANGUAGE_NONE][0]['value']['#prefix'] = '<div id="codigo_accion_id">';
          $accion['field_codigo_accion_estrategica'][LANGUAGE_NONE][0]['value']['#suffix'] = '</div>';

          $accion_code = is_add_form($form_state) || isset($form_state['values']) ? generate_action_code($item_id, $accion_id, $form) : action_default_value($item_id, $accion_id, $form);

          $accion_group = $accion_id > 0 ? clone_group($accion['#groups']['group_acciones']) : $accion['#groups']['group_acciones'];
          $accion_group->label = 'Ae' . ($accion_id + 1);
          $accion['field_codigo_accion_estrategica'][LANGUAGE_NONE][0]['value']['#default_value'] = $accion_code;

          $accion['#groups']['group_acciones'] = $accion_group;
          $accion['#fieldgroups']['group_acciones'] = $accion_group;

          //Meta
          $accion['field_meta'][LANGUAGE_NONE]['add_more']['#value'] = 'Agregar nueva meta';
          //unset($accion['field_meta'][LANGUAGE_NONE][0]['target_id']['#autocomplete_path']);
          $meta_array = array_filter($accion['field_meta'][LANGUAGE_NONE], function ($k) { return is_numeric($k); },  ARRAY_FILTER_USE_KEY);
          foreach ($meta_array as $meta_id => $meta) {
            $meta['target_id']['#prefix'] = '<div id="item_' . $item_id . '_accion_' . $accion_id . '_meta_' . $meta_id .'">';
            $meta['target_id']['#suffix'] = '</div>';
            $meta['target_id']['#description'] = 'Este elemento será renombrado como: "' . $accion['field_codigo_accion_estrategica'][LANGUAGE_NONE][0]['value']['#default_value'] . 'M' . ($meta_id + 1) . '"';
            $accion['field_meta'][LANGUAGE_NONE][$meta_id] = $meta;
          }
          $item['field_accion_collect'][LANGUAGE_NONE][$accion_id] = $accion;
        }
      }
      $form['field_item_compromiso'][LANGUAGE_NONE][$item_id] = $item;
  }
}

/**
 * Implements hook_field_collection_item_insert().
 */
function auto_fill_id_field_collection_item_insert(FieldCollectionItemEntity $field_collection_item)
{
  if($field_collection_item->field_name == "field_item_compromiso") {
//      item_id($field_collection_item);
  }

  if($field_collection_item->field_name == "field_accion_collect") {
    //accion_id($field_collection_item);
  }
}

/**
 * Implements hook_field_collection_item_presave().
 */
function auto_fill_id_field_collection_item_presave(FieldCollectionItemEntity $field_collection_item) {
  if($field_collection_item->field_name == "field_item_compromiso") {
    //item_id($field_collection_item);
  }

  if($field_collection_item->field_name == "field_accion_collect") {
    //check_action($field_collection_item);
  }
}


/**
 * Implements hook_field_collection_item_update().
 */
function auto_fill_id_field_collection_item_update(FieldCollectionItemEntity $field_collection_item) {

}

function clone_group($group_items){
  $new_group = new stdClass();
  $new_group->identifier = $group_items->identifier;
  $new_group->group_name = $group_items->group_name;
  $new_group->entity_type = $group_items->entity_type;
  $new_group->bundle = $group_items->bundle;
  $new_group->mode = $group_items->mode;
  $new_group->parent_name = $group_items->parent_name;
  $new_group->table = $group_items->table;
  $new_group->type = $group_items->type;
  $new_group->export_type = $group_items->export_type;
  $new_group->disabled = $group_items->disabled;
  $new_group->label = $group_items->label;
  $new_group->weight = $group_items->weight;
  $new_group->children = $group_items->children;
  $new_group->format_type = $group_items->format_type;
  $new_group->format_settings = $group_items->format_settings;

  return $new_group;
}

function is_add_form($form_state){
  return !isset($form_state['node']->nid);
}

function action_default_value($item_id, $action_id, $form) {
  $item_entity = $form['field_item_compromiso'][LANGUAGE_NONE][$item_id]['#entity'];
  $eje =  !empty($item_entity->field_codigo_eje) ? $item_entity->field_codigo_eje[LANGUAGE_NONE][0]['tid'] : '0';
  $ambito = !empty($item_entity->field_codigo_ambito) ? $item_entity->field_codigo_ambito[LANGUAGE_NONE][0]['tid']  :'0';
  $lineamiento = !empty($item_entity->field_codigo_lineamiento) ? $item_entity->field_codigo_lineamiento[LANGUAGE_NONE][0]['tid'] : '0';
  
  $cod_eje = taxonomy_term_load($eje);
  $cod_ambito = taxonomy_term_load($ambito);
  $cod_lineamiento = taxonomy_term_load($lineamiento);
  
  return 'E'. $cod_eje->field_auto_inc_eje['und'][0]['value'] . '-A' . $cod_ambito->field_auto_inc_ambito['und'][0]['value'] . '.L' . $cod_lineamiento->field_auto_inc_lin['und'][0]['value'] . '.Ae' . ($action_id + 1);
}

function meta_callback($form, $form_state) {
  return $form['field_item_de_compromiso'][LANGUAGE_NONE][0]['field_accion_collect'][LANGUAGE_NONE][0]['field_meta'][LANGUAGE_NONE]['form']['title']['value'];
}

function generate_action_code($item_id, $action_id, $form) {
    
  $eje = !empty($form['field_item_compromiso'][LANGUAGE_NONE][$item_id]['field_codigo_eje'][LANGUAGE_NONE]['#default_value']) ?
    $form['field_item_compromiso'][LANGUAGE_NONE][$item_id]['field_codigo_eje'][LANGUAGE_NONE]['#default_value'][0] : '0';
  $ambito = !empty($form['field_item_compromiso'][LANGUAGE_NONE][$item_id]['field_codigo_ambito'][LANGUAGE_NONE]['#default_value']) ?
    $form['field_item_compromiso'][LANGUAGE_NONE][$item_id]['field_codigo_ambito'][LANGUAGE_NONE]['#default_value'][0] : '0';
  $lineamiento = !empty($form['field_item_compromiso'][LANGUAGE_NONE][$item_id]['field_codigo_lineamiento'][LANGUAGE_NONE]['#default_value']) ?
    $form['field_item_compromiso'][LANGUAGE_NONE][$item_id]['field_codigo_lineamiento'][LANGUAGE_NONE]['#default_value'][0] : '0';
  
      $cod_eje = taxonomy_term_load($eje);
      $cod_ambito = taxonomy_term_load($ambito);
      $cod_lineamiento = taxonomy_term_load($lineamiento);

  
      if ($cod_eje==null&&$cod_ambito==null&&$cod_lineamiento==null){
          return 'E#-A#.L#.Ac#';
      }
      else {
          return 'E'. $cod_eje->field_auto_inc_eje['und'][0]['value'] . '-A' . $cod_ambito->field_auto_inc_ambito['und'][0]['value'] . '.L' . $cod_lineamiento->field_auto_inc_lin['und'][0]['value'] . '.Ae' . ($action_id + 1);
      }
          
  
}

//Form ajax callback
function eal_ajax_callback($form, $form_state) {
  $commands = array();
  foreach($form['field_item_compromiso'][LANGUAGE_NONE] as $item_id => $item) {
    if(is_numeric($item_id)) {
      foreach ($item['field_accion_collect'][LANGUAGE_NONE] as $action_id => $action) {
        if (is_numeric($action_id)) {
          $commands[] = ajax_command_replace("#item_". $item_id . "_codigo_accion_" . $action_id, drupal_render($action['field_codigo_accion_estrategica'][LANGUAGE_NONE][0]['value']));
          //$commands[] = ajax_command_replace('#item_' . $item_id . '_accion_meta_' . $action_id, drupal_render($action['field_meta'][LANGUAGE_NONE][0]['target_id']));
          $meta_array = array_filter($action['field_meta'][LANGUAGE_NONE], function ($k) { return is_numeric($k); },  ARRAY_FILTER_USE_KEY);
          foreach ($meta_array as $meta_id => $meta) {
            $commands[] = ajax_command_replace('#item_' . $item_id . '_accion_' . $action_id . '_meta_' . $meta_id, drupal_render($meta['target_id']));
            $accion['field_meta'][LANGUAGE_NONE][$meta_id] = $meta;
          }
        }
        $item['field_accion_collect'][LANGUAGE_NONE][$action_id] = $action;
      }
      $form['field_item_compromiso'][LANGUAGE_NONE][$item_id] = $item;
    }
  }
  return array(
    '#type' => 'ajax',
    '#commands' => $commands,
  );
}

function method_1($form, $form_State) {
  return $form['field_item_compromiso']['und'][0]['field_accion_collect']['und'][0]['field_codigo_accion_estrategica']['und'][0]['value'];
}

function check_action(FieldCollectionItemEntity &$field_collection_item) {
  if(!empty($field_collection_item->field_meta)) {
    $size = sizeof($field_collection_item->field_meta[LANGUAGE_NONE]);
    if ($size > 1) {
      $array = array_slice($field_collection_item->field_meta[LANGUAGE_NONE], $size - 1);
      $field_collection_item->field_meta[LANGUAGE_NONE] = $array;
    }
  }
}

function compromiso_id($node) {
    if($node->field_id_compromiso) {
        $id = $node->field_id_compromiso[LANGUAGE_NONE][0]["value"];
        $ins = !empty($node->field_institucion) ? node_load($node->field_institucion[LANGUAGE_NONE][0]["target_id"]) : null;
        $ins_name = $ins ? $ins->title : '';
        $node->title = $id . '-' . date('Y') . '-' . $ins_name;
        $node->field_porcentaje_de_avance_compr = simple_string_field_value(compromiso_percentage($node));
    }
}

function action_id($compromiso_node) {
  compromiso_percentage($compromiso_node);
  foreach($compromiso_node->field_item_compromiso[LANGUAGE_NONE] as $item_id) { 
    $item = field_collection_item_load($item_id['value']);
    if($item) {
      $eje = !empty($item->field_codigo_eje) ? taxonomy_term_load($item->field_codigo_eje[LANGUAGE_NONE][0]['tid']) : FALSE;
      $ambito = !empty($item->field_codigo_ambito) ? taxonomy_term_load($item->field_codigo_ambito[LANGUAGE_NONE][0]['tid']) : FALSE;
      $lineamiento = !empty($item->field_codigo_lineamiento) ? taxonomy_term_load($item->field_codigo_lineamiento[LANGUAGE_NONE][0]['tid']) : FALSE;

      $cod_eje = $eje ? $eje->field_auto_inc_eje['und'][0]['value'] : '';
      $cod_ambito = $ambito ? $ambito->field_auto_inc_ambito['und'][0]['value'] : '';
      $cod_lineamiento = $lineamiento ? $lineamiento->field_auto_inc_lin['und'][0]['value'] : '';

      foreach($item->field_accion_collect[LANGUAGE_NONE] as $action_key => $action_id) {
        $action = field_collection_item_load($action_id['value']);
        if($action) {
            $action->field_codigo_accion_estrategica[LANGUAGE_NONE][0]['value'] = 'E'. $cod_eje . '-A' . $cod_ambito . '.L' . $cod_lineamiento . '.Ae' . ($action_key + 1);
          //$action->field_codigo_accion_estrategica[LANGUAGE_NONE][0]['value'] = 'E' . $eje . 'A' . $ambito . 'L' . $lineamiento . 'Ae' . ($action_key + 1);
          if(!empty($action->field_meta)) {
            foreach ($action->field_meta[LANGUAGE_NONE] as $meta_id => $meta) {
              meta_id($meta_id, $meta['target_id'], $action->field_codigo_accion_estrategica[LANGUAGE_NONE][0]['value']);
            }
          }
          $action->save(TRUE);
        }
      }
    }
  }
}

function meta_id($meta_id, $meta_nid, $action_id){
  $meta = node_load($meta_nid);
  $meta->title = $action_id . '.(M' . ($meta_id + 1) . ')';
  $meta->revision = 1;
  node_save($meta);
  if(!empty($meta->field_producto)) {
    foreach ($meta->field_producto[LANGUAGE_NONE] as $key => $productos) {
      producto_id($meta, $productos['target_id'], ($key + 1));
    }
  }
}

function producto_id($meta_node, $producto_nid, $producto_id){
  $producto = node_load($producto_nid);
  if(!$producto->field_nombre_manual[LANGUAGE_NONE][0]['value'] > 0) {
    //$producto->field_cod_producto_meta = simple_string_field_value('.P' . $producto_id);
    $producto->field_cod_producto_meta = simple_string_field_value($meta_node->title .  '.P' . $producto_id);
    //$producto->field_cod_producto_meta = simple_string_field_value('M1P' . $producto_id);
    $producto->revision = 1;
    node_save($producto);
  }
}

function compromiso_percentage($compromis_node) {
  if(!empty($compromis_node->field_item_compromiso)) {
    $total = 0;
    $cant = 0;
    foreach ($compromis_node->field_item_compromiso[LANGUAGE_NONE] as $item) {
      if(!empty($item['field_accion_collect'])) {
        foreach ($item['field_accion_collect'][LANGUAGE_NONE] as $action) {
          if(!empty($action['field_meta'])) {
            $metas = array_filter($action['field_meta'][LANGUAGE_NONE], function ($v, $k) {
              return is_numeric($k) && !empty($v['target_id']);
            }, ARRAY_FILTER_USE_BOTH);
            $cant += sizeof($metas);
            foreach ($metas as $meta) {
              $meta_node = node_load($meta['target_id']);
              $total += $meta_node->field_porcentaje_avance[LANGUAGE_NONE][0]['value'] ;
            }
          }
        }
      }
    }
    return $cant > 0 ? (($total - $cant) * 25) /$cant : 0;
  }
  return 0;
}

function simple_string_field_value($value) {
  return array(
    LANGUAGE_NONE => array(
      0 => array(
        'value' => $value,
        'format' => NULL,
        'safe_value' => $value,
      ),
    ),
  );
}